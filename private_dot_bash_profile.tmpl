##
###   Homebrew env config
##
## Apple Silicon
if [[ $(uname -m) == 'arm64' ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi


##
###   Go lang Settings
##
export GOPATH="${HOME}/.go"
export GOROOT="$(brew --prefix go)/libexec"
export PATH="$PATH:$(go env GOPATH)/bin"
export GO111MODULE=""
export GOPROXY="https://proxy.golang.org,direct"
export GOSUMDB="sum.golang.org"
export GOMOD=""


##
###   Rust Settings
##
export RUSTUP_HOME="$HOME/.rustup"
export CARGO_HOME="$HOME/.cargo"
. "$HOME/.cargo/env"
export PATH="$PATH:${HOME}/.cargo/bin"
export PATH="$PATH:$(brew --prefix rustup)/bin"


##
###   mise config
##
## from: https://mise.jdx.dev
eval "$(/opt/homebrew/bin/mise activate bash)"


##
###   Bash Completion
##
## from http://sourabhbajaj.com/mac-setup/BashCompletion/
[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"

## iTerm2 integration
test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash" || true
## from https://gist.github.com/phette23/5270658
if [ $ITERM_SESSION_ID ]; then
  export PROMPT_COMMAND='echo -ne "\033]0;${PWD##*/}\007"';
fi

## 1Password CLI completion
source <(op completion bash)

## direnv CLI hook
eval "$(direnv hook bash)"


##
###   Kubernetes Helpers
##
## load the kube-ps1 brew package, PS1 is set in COLORS section after exporting
## Intel Mac
if [[ $(uname -m) == 'x86_64' ]]; then
  source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"
fi
## Apple Silicon
if [[ $(uname -m) == 'arm64' ]]; then
  source "/opt/homebrew/opt/kube-ps1/share/kube-ps1.sh"
fi

## use nano instead of vim
export KUBE_EDITOR="nano"
## use krew kubectl plugin
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"


##
###   Shortcuts
##
## List declared aliases, functions, paths
alias aliases="alias | sed 's/=.*//'"

## Interactively update global yarn packages (like npm-check)
alias yarn-check="yarn global upgrade-interactive --latest"

## pretty git log
alias glog="git log --pretty=oneline --abbrev-commit"

## Source bash_profile
alias reload="source ~/.bash_profile"

alias k="kubectl"

## Load .bashrc if it exists
test -f ~/.bashrc && source ~/.bashrc


##
###   Colors
##
## Change bash prompt to be colorized, rearranges prompt to be: "@username:cwd $ "
export PS1="@\[\033[36m\]\u\[\033[m\]:\[\033[33;1m\]\W\[\033[m\]\$ "
## test with ▲ prompt instead of $
#export PS1="@\[\033[36m\]\u\[\033[m\]:\[\033[33;1m\]\W\[\033[m\]\▲ "


## Add k8s helper to PS1
## "@username:cwd$ (kube-ps1) "
{{- if eq .chezmoi.hostname "WorkBook" }}
## machine-specific configuration
## only display the first portion of the cluster name
function get_cluster_short() {
  #echo "$1" | cut -d / -f1 | sed 's/-bastion$//g'
  # echo "$1" | cut -d / -f1 | sed 's/-bastion-.*//g'
  echo $CLUSTER_NAME
  # echo "$1" | cut -d / -f1 | sed 's/.*-bastion-\(.*\)-bastion-.*/\1/g'
}
KUBE_PS1_CLUSTER_FUNCTION=get_cluster_short
{{- end }}

KUBE_PS1_CTX_COLOR='magenta'
PS1=$PS1'$(kube_ps1) '


## colorize help output with bat
## source: https://github.com/sharkdp/bat
## ex. 'help icdflow'
help() {
    "$@" --help 2>&1 | bat --plain --language=help
}
alias bathelp='bat -plhelp --paging=never'

## Enable command line colors, define colors for the 'ls' command
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad


## Makes reading directory listings easier
## -G: colorize output, -h: sizes human readable, -F: throws a / after a directory, * after an executable, and a @ after a symlink
alias ls='ls -GFh'



{{- if eq .chezmoi.hostname "HackBook-Pro" }}
## machine-specific configuration

## https://tailscale.com/kb/1080/cli?tab=macos
alias tailscale="/Applications/Tailscale.app/Contents/MacOS/Tailscale"
{{- end }}


{{- if eq .chezmoi.hostname "WorkBook" }}
## machine-specific configuration

##
###   Shortcuts
##
## helper script for daily standup meetings
alias nextup="~/Documents/GitHub/nextup/target/release/nextup --names $HOME/Documents/GitHub/nextup/team.txt"

## helper script for connecting to GPVPN
alias tvpn="$HOME/Documents/Workspace/tgpvpn-script/tvpn.sh"
{{- end }}

